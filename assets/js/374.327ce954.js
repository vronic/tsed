(window.webpackJsonp=window.webpackJsonp||[]).push([[374],{660:function(n,s,a){"use strict";a.r(s);var t=a(29),p=Object(t.a)({},(function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h1",{attrs:{id:"provider"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#provider"}},[n._v("#")]),n._v(" Provider "),a("Badge",{attrs:{text:"Class",type:"class"}})],1),n._v(" "),a("section",{staticClass:"symbol-info"},[a("table",{staticClass:"is-full-width"},[a("tbody",[a("tr",[a("th",[n._v("Module")]),a("td",[a("div",{staticClass:"lang-typescript"},[a("span",{staticClass:"token keyword"},[n._v("import")]),n._v(" { Provider } "),a("span",{staticClass:"token keyword"},[n._v("from")]),n._v(" "),a("span",{staticClass:"token string"},[n._v('"@tsed/di"')])])])]),a("tr",[a("th",[n._v("Source")]),a("td",[a("a",{attrs:{href:"https://github.com/TypedProject/tsed/blob/v5.52.1/packages/di/src/class/Provider.ts#L0-L0"}},[n._v("/packages/di/src/class/Provider.ts")])])])])])]),n._v(" "),a("h2",{attrs:{id:"overview"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[n._v("#")]),n._v(" Overview")]),n._v(" "),a("div",{staticClass:"language-typescript"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",{pre:!0,attrs:{class:"typescript-lang "}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("class")]),n._v(" Provider<T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(" = ")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("any")]),n._v("> "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("implements")]),n._v(" "),a("a",{pre:!0,attrs:{href:"/api/di/interfaces/IProvider.html"}},[a("span",{pre:!0,attrs:{class:"token"}},[n._v("IProvider")])]),n._v("<T> "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n    type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" "),a("a",{pre:!0,attrs:{href:"/api/di/interfaces/ProviderType.html"}},[a("span",{pre:!0,attrs:{class:"token"}},[n._v("ProviderType")])]),n._v(" | "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    injectable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    deps"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" "),a("a",{pre:!0,attrs:{href:"/api/di/interfaces/TokenProvider.html"}},[a("span",{pre:!0,attrs:{class:"token"}},[n._v("TokenProvider")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    imports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    useFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" Function"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    useAsyncFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" Function"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    useValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("protected")]),n._v(" _provide"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" "),a("a",{pre:!0,attrs:{href:"/api/di/interfaces/TokenProvider.html"}},[a("span",{pre:!0,attrs:{class:"token"}},[n._v("TokenProvider")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("protected")]),n._v(" _useClass"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" "),a("a",{pre:!0,attrs:{href:"/api/core/interfaces/Type.html"}},[a("span",{pre:!0,attrs:{class:"token"}},[n._v("Type")])]),n._v("<T>"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("protected")]),n._v(" _instance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(":")]),n._v(" T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n"),a("div",{pre:!0,attrs:{class:"language- extra-class"}},[a("pre",[a("code",[n._v('<span class="token punctuation">[</span>key<span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">any</span><span class="token punctuation">;</span>\n<span class="token keyword">constructor</span><span class="token punctuation">(</span>token<span class="token punctuation">:</span> <a href="/api/di/interfaces/TokenProvider.html"><span class="token">TokenProvider</span></a><span class="token punctuation">)</span><span class="token punctuation">;</span>\nget <span class="token function">token</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">any</span><span class="token punctuation">;</span>\nget <span class="token function">provide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <a href="/api/di/interfaces/TokenProvider.html"><span class="token">TokenProvider</span></a><span class="token punctuation">;</span>\nset <span class="token function">provide</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <a href="/api/di/interfaces/TokenProvider.html"><span class="token">TokenProvider</span></a><span class="token punctuation">)</span><span class="token punctuation">;</span>\nget <span class="token function">useClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <a href="/api/core/interfaces/Type.html"><span class="token">Type</span></a>&lt;T&gt;<span class="token punctuation">;</span>\n/**\n * Create a new store if the given value is a <span class="token keyword">class</span>. Otherwise the value is ignored.\n * @param value\n */\nset <span class="token function">useClass</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <a href="/api/core/interfaces/Type.html"><span class="token">Type</span></a>&lt;T&gt;<span class="token punctuation">)</span><span class="token punctuation">;</span>\nget <span class="token function">className</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">;</span>\nget <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">;</span>\nget <span class="token function">store</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <a href="/api/core/class/Store.html"><span class="token">Store</span></a><span class="token punctuation">;</span>\n/**\n * <a href="/api/common/mvc/decorators/method/Get.html"><span class="token">Get</span></a> the scope of the provider.\n *\n * <span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token punctuation">:</span> tip Note\n * Async provider is always a SINGLETON\n * <span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token punctuation">:</span>\n *\n * @returns <span class="token punctuation">{</span><span class="token keyword">boolean</span><span class="token punctuation">}</span>\n */\nget <span class="token function">scope</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <a href="/api/di/interfaces/ProviderScope.html"><span class="token">ProviderScope</span></a><span class="token punctuation">;</span>\n/**\n * Change the scope value of the provider.\n * @param scope\n */\nset <span class="token function">scope</span><span class="token punctuation">(</span>scope<span class="token punctuation">:</span> <a href="/api/di/interfaces/ProviderScope.html"><span class="token">ProviderScope</span></a><span class="token punctuation">)</span><span class="token punctuation">;</span>\nget <span class="token function">configuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> Partial&lt;TsED.<a href="/api/di/decorators/Configuration.html"><span class="token">Configuration</span></a>&gt;<span class="token punctuation">;</span>\nset <span class="token function">configuration</span><span class="token punctuation">(</span>configuration<span class="token punctuation">:</span> Partial&lt;TsED.<a href="/api/di/decorators/Configuration.html"><span class="token">Configuration</span></a>&gt;<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">any</span><span class="token punctuation">;</span>\n<span class="token function">isAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">boolean</span><span class="token punctuation">;</span>\n<span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> Provider&lt;<span class="token keyword">any</span>&gt;<span class="token punctuation">;</span>\n<span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">;</span>\n')])])]),a("p",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")])])])])]),a("p")])}),[],!1,null,null,null);s.default=p.exports}}]);