(window.webpackJsonp=window.webpackJsonp||[]).push([[268],{554:function(n,s,a){"use strict";a.r(s);var t=a(29),p=Object(t.a)({},(function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h1",{attrs:{id:"requestlogger"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requestlogger"}},[n._v("#")]),n._v(" RequestLogger "),a("Badge",{attrs:{text:"Class",type:"class"}})],1),n._v(" "),a("section",{staticClass:"symbol-info"},[a("table",{staticClass:"is-full-width"},[a("tbody",[a("tr",[a("th",[n._v("Module")]),a("td",[a("div",{staticClass:"lang-typescript"},[a("span",{staticClass:"token keyword"},[n._v("import")]),n._v(" { RequestLogger } "),a("span",{staticClass:"token keyword"},[n._v("from")]),n._v(" "),a("span",{staticClass:"token string"},[n._v('"@tsed/common"')])])])]),a("tr",[a("th",[n._v("Source")]),a("td",[a("a",{attrs:{href:"https://github.com/TypedProject/tsed/blob/v5.52.1/packages/common/src/platform/domain/RequestLogger.ts#L0-L0"}},[n._v("/packages/common/src/platform/domain/RequestLogger.ts")])])])])])]),n._v(" "),a("h2",{attrs:{id:"overview"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[n._v("#")]),n._v(" Overview")]),n._v(" "),a("div",{staticClass:"language-typescript"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",{pre:!0,attrs:{class:"typescript-lang "}},[a("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("class")]),n._v(" RequestLogger "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n"),a("div",{pre:!0,attrs:{class:"language- extra-class"}},[a("pre",[a("code",[n._v('<span class="token keyword">readonly</span> id<span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">;</span>\n<span class="token keyword">readonly</span> url<span class="token punctuation">:</span> <span class="token keyword">string</span><span class="token punctuation">;</span>\n<span class="token keyword">readonly</span> startDate<span class="token punctuation">:</span> <span class="token keyword">Date</span><span class="token punctuation">;</span>\nmaxStackSize<span class="token punctuation">:</span> <span class="token keyword">number</span><span class="token punctuation">;</span>\nminimalRequestPicker<span class="token punctuation">:</span> Function<span class="token punctuation">;</span>\ncompleteRequestPicker<span class="token punctuation">:</span> Function<span class="token punctuation">;</span>\n\n\n\n<span class="token keyword">constructor</span><span class="token punctuation">(</span>logger<span class="token punctuation">:</span> <span class="token keyword">any</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> id<span class="token punctuation">,</span> startDate<span class="token punctuation">,</span> url<span class="token punctuation">,</span> ignoreUrlPatterns<span class="token punctuation">,</span> minimalRequestPicker<span class="token punctuation">,</span> completeRequestPicker<span class="token punctuation">,</span> level<span class="token punctuation">,</span> maxStackSize <span class="token punctuation">}</span><span class="token punctuation">:</span> <span class="token keyword">any</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">info</span><span class="token punctuation">(</span>obj<span class="token punctuation">:</span> <span class="token keyword">any</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n<span class="token function">debug</span><span class="token punctuation">(</span>obj<span class="token punctuation">:</span> <span class="token keyword">any</span><span class="token punctuation">,</span> withRequest?<span class="token punctuation">:</span> <span class="token keyword">boolean</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n<span class="token function">warn</span><span class="token punctuation">(</span>obj<span class="token punctuation">:</span> <span class="token keyword">any</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n<span class="token function">error</span><span class="token punctuation">(</span>obj<span class="token punctuation">:</span> <span class="token keyword">any</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n<span class="token function">trace</span><span class="token punctuation">(</span>obj<span class="token punctuation">:</span> <span class="token keyword">any</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n<span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n<span class="token function">isLevelEnabled</span><span class="token punctuation">(</span>otherLevel<span class="token punctuation">:</span> <span class="token keyword">string</span> | LogLevel<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">boolean</span><span class="token punctuation">;</span>\n<span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n/**\n * Return the duration between the time when LogIncomingRequest has handle the request and now.\n * @returns <span class="token punctuation">{</span><span class="token keyword">number</span><span class="token punctuation">}</span>\n */\n<span class="token keyword">protected</span> <span class="token function">getDuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">number</span><span class="token punctuation">;</span>\n<span class="token keyword">protected</span> <span class="token function">getData</span><span class="token punctuation">(</span>obj<span class="token punctuation">:</span> <span class="token keyword">any</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">any</span><span class="token punctuation">;</span>\n<span class="token keyword">protected</span> <span class="token function">run</span><span class="token punctuation">(</span>level<span class="token punctuation">:</span> LogLevel<span class="token punctuation">,</span> cb<span class="token punctuation">:</span> Function<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n')])])]),a("p",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")])])])])]),a("p")])}),[],!1,null,null,null);s.default=p.exports}}]);